class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def append(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        last = self.head
        while last.next:
            last = last.next
        last.next = new_node

    def remove(self, key):
        temp = self.head
        if temp is not None:
            if temp.data == key:
                self.head = temp.next
                temp = None
                return
        while temp is not None:
            if temp.data == key:
                break
            prev = temp
            temp = temp.next
        if temp is None:
            print(f"{key} not found in the list.")
            return
        prev.next = temp.next
        temp = None

    def insert_at_position(self, pos, data):
        new_node = Node(data)
        if pos == 0:
            new_node.next = self.head
            self.head = new_node
            return
        temp = self.head
        for _ in range(pos - 1):
            if temp is None:
                return
            temp = temp.next
        new_node.next = temp.next
        temp.next = new_node

    def replace_at_position(self, pos, data):
        temp = self.head
        if pos == 0:
            self.head.data = data
            return
        for _ in range(pos):
            if temp is None:
                return
            temp = temp.next
        if temp is not None:
            temp.data = data

    def search(self, key):
        temp = self.head
        pos = 0
        while temp is not None:
            if temp.data == key:
                print(f"{key} found at position {pos}")
                return
            temp = temp.next
            pos += 1
        print(f"{key} not found in the list.")

    def print_list(self):
        temp = self.head
        while temp:
            print(temp.data, end=" -> ")
            temp = temp.next
        print("None")

ll = LinkedList()
ll.append('America')
ll.append('Japan')
ll.append('India')

choice = 0

while choice < 5:
    print('All linked list operations:')
    print('Enter 1 to add an Element')
    print('Enter 2 to remove an Element')
    print('Enter 3 to replace an Element')
    print('Enter 4 to search for an Element')
    print('Enter 5 to exit')

    choice = int(input('Enter your choice here: '))
    
    if choice == 1:
        element = input('Enter element to add: ')
        pos = int(input('At what position would you like to add? '))
        ll.insert_at_position(pos, element)
        print('New linked list is: ', end='')
        ll.print_list()

    elif choice == 2:
        element = input('Enter element to remove: ')
        ll.remove(element)
        print('New linked list after removal is: ', end='')
        ll.print_list()

    elif choice == 3:
        element = input('Enter new element to replace: ')
        pos = int(input('Enter at what position you would like to replace: '))
        ll.replace_at_position(pos, element)
        print('New linked list after replacement is: ', end='')
        ll.print_list()

    elif choice == 4:
        element = input('Enter element to search: ')
        ll.search(element)

    elif choice == 5:
        break
